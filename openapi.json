{
  "openapi": "3.1.0",
  "info": {
    "title": "Execution service",
    "description": "Execution layer for Fingerprint Browser Automation System",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/dashboard/workers": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Workers",
        "description": "Get all workers with filtering\n\nReturns array of worker objects with pagination metadata",
        "operationId": "get_workers_api_v1_dashboard_workers_get",
        "parameters": [
          {
            "name": "worker_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkerType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by worker type",
              "title": "Worker Type"
            },
            "description": "Filter by worker type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of workers to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of workers to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of workers to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of workers to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/workers/{uuid}": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Worker Details",
        "description": "Get detailed information about a specific worker",
        "operationId": "get_worker_details_api_v1_dashboard_workers__uuid__get",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkerDetailsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dashboard"
        ],
        "summary": "Remove Worker",
        "description": "Remove a worker from the system",
        "operationId": "remove_worker_api_v1_dashboard_workers__uuid__delete",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveWorkerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/workers/{uuid}/note": {
      "patch": {
        "tags": [
          "dashboard"
        ],
        "summary": "Update Worker Note",
        "description": "Update worker note",
        "operationId": "update_worker_note_api_v1_dashboard_workers__uuid__note_patch",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkerNoteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkerNoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/workers/{uuid}/heartbeat": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Worker Heartbeat",
        "description": "Get worker heartbeat status",
        "operationId": "get_worker_heartbeat_api_v1_dashboard_workers__uuid__heartbeat_get",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkerHeartbeatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/workers/{uuid}/report": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Worker Status Report",
        "description": "Get worker status report",
        "operationId": "get_worker_status_report_api_v1_dashboard_workers__uuid__report_get",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkerStatusReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/proxy": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Proxies",
        "description": "Get all proxies with filtering\n\nReturns array of proxy objects with pagination metadata",
        "operationId": "get_proxies_api_v1_dashboard_proxy_get",
        "parameters": [
          {
            "name": "is_available",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by availability status",
              "title": "Is Available"
            },
            "description": "Filter by availability status"
          },
          {
            "name": "country_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by country code",
              "title": "Country Code"
            },
            "description": "Filter by country code"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of proxies to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of proxies to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of proxies to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of proxies to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProxiesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/proxy/{uuid}": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Proxy Details",
        "description": "Get detailed information about a specific proxy",
        "operationId": "get_proxy_details_api_v1_dashboard_proxy__uuid__get",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProxyDetailsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dashboard"
        ],
        "summary": "Delete Proxy",
        "description": "Delete a single proxy",
        "operationId": "delete_proxy_api_v1_dashboard_proxy__uuid__delete",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProxyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/proxy/{uuid}/update": {
      "patch": {
        "tags": [
          "dashboard"
        ],
        "summary": "Update Proxy",
        "description": "Update proxy information - can update any combination of fields",
        "operationId": "update_proxy_api_v1_dashboard_proxy__uuid__update_patch",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProxyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProxyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/proxy/insert": {
      "post": {
        "tags": [
          "dashboard"
        ],
        "summary": "Insert Proxy",
        "description": "Create a new proxy (for importing proxies)",
        "operationId": "insert_proxy_api_v1_dashboard_proxy_insert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProxyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProxyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/proxy/{uuid}/detect": {
      "post": {
        "tags": [
          "dashboard"
        ],
        "summary": "Detect Proxy By Uuid",
        "description": "Detect proxy location by UUID and update database",
        "operationId": "detect_proxy_by_uuid_api_v1_dashboard_proxy__uuid__detect_post",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetectProxyByUuidResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workers/register": {
      "post": {
        "tags": [
          "workers"
        ],
        "summary": "Register Worker",
        "description": "Worker self-registration",
        "operationId": "register_worker_api_v1_workers_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterWorkerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterWorkerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workers/{uuid}/heartbeat": {
      "post": {
        "tags": [
          "workers"
        ],
        "summary": "Worker Heartbeat",
        "description": "Worker heartbeat update with Redis TTL\n\nWorker sends heartbeat_interval in JSON body, Redis auto-sets 3x interval TTL",
        "operationId": "worker_heartbeat_api_v1_workers__uuid__heartbeat_post",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendHeartbeatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendHeartbeatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workers/{uuid}/report": {
      "post": {
        "tags": [
          "workers"
        ],
        "summary": "Worker Report",
        "description": "Worker status report submission",
        "operationId": "worker_report_api_v1_workers__uuid__report_post",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendStatusReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendStatusReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crawler/task/create": {
      "post": {
        "tags": [
          "crawler"
        ],
        "summary": "Submit Task",
        "description": "Submit task to worker",
        "operationId": "submit_task_api_v1_crawler_task_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crawler/browser/terminate": {
      "post": {
        "tags": [
          "crawler"
        ],
        "summary": "Terminate Browser",
        "description": "Terminate browser",
        "operationId": "terminate_browser_api_v1_crawler_browser_terminate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminateBrowserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminateBrowserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crawler/resource/{resource_uuid}": {
      "get": {
        "tags": [
          "crawler"
        ],
        "summary": "Get Resource Status",
        "description": "Get resource status and information",
        "operationId": "get_resource_status_api_v1_crawler_resource__resource_uuid__get",
        "parameters": [
          {
            "name": "resource_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Resource UUID",
              "title": "Resource Uuid"
            },
            "description": "Resource UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crawler/browser/start": {
      "post": {
        "tags": [
          "crawler"
        ],
        "summary": "Start Browser For Country",
        "operationId": "start_browser_for_country_api_v1_crawler_browser_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartBrowserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartBrowserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiStatus": {
        "type": "string",
        "enum": [
          "ok",
          "failed",
          "error",
          "sent",
          "no_worker"
        ],
        "title": "ApiStatus",
        "description": "API response status enumeration"
      },
      "BrowserInstanceInfo": {
        "properties": {
          "pid": {
            "type": "integer",
            "title": "Pid"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "is_alive": {
            "type": "boolean",
            "title": "Is Alive"
          },
          "executable_path": {
            "type": "string",
            "title": "Executable Path"
          },
          "args": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Args"
          },
          "envs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Envs"
          },
          "user_data_dir": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Data Dir"
          }
        },
        "type": "object",
        "required": [
          "pid",
          "port",
          "is_alive",
          "executable_path",
          "args",
          "envs"
        ],
        "title": "BrowserInstanceInfo",
        "description": "Browser instance runtime information"
      },
      "CreateProxyRequest": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "Proxy host"
          },
          "port": {
            "type": "integer",
            "maximum": 65535.0,
            "minimum": 1.0,
            "title": "Port",
            "description": "Proxy port"
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Proxy username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Proxy password"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Country code (2-3 chars)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "description": "Availability status",
            "default": true
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Proxy note"
          }
        },
        "type": "object",
        "required": [
          "host",
          "port",
          "username",
          "password"
        ],
        "title": "CreateProxyRequest",
        "description": "Create proxy request"
      },
      "CreateProxyResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Creation status message"
          },
          "proxy_uuid": {
            "type": "string",
            "title": "Proxy Uuid",
            "description": "Created proxy UUID"
          },
          "host": {
            "type": "string",
            "title": "Host",
            "description": "Proxy host"
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "Proxy port"
          }
        },
        "type": "object",
        "required": [
          "message",
          "proxy_uuid",
          "host",
          "port"
        ],
        "title": "CreateProxyResponse",
        "description": "Create proxy response"
      },
      "DeleteProxyResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Deletion status message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DeleteProxyResponse",
        "description": "Delete proxy response"
      },
      "DetectProxyByUuidResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Detection status message"
          },
          "proxy_uuid": {
            "type": "string",
            "title": "Proxy Uuid",
            "description": "Proxy UUID"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Detected country code"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Detected timezone"
          },
          "last_checked_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Checked At",
            "description": "Last check timestamp"
          }
        },
        "type": "object",
        "required": [
          "message",
          "proxy_uuid",
          "last_checked_at"
        ],
        "title": "DetectProxyByUuidResponse",
        "description": "Detect proxy by UUID response"
      },
      "GetProxiesResponse": {
        "properties": {
          "proxies": {
            "items": {
              "$ref": "#/components/schemas/ProxyInfo"
            },
            "type": "array",
            "title": "Proxies",
            "description": "List of proxies"
          },
          "pagination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "Pagination information"
          }
        },
        "type": "object",
        "required": [
          "proxies",
          "pagination"
        ],
        "title": "GetProxiesResponse",
        "description": "Get proxies list response"
      },
      "GetProxyDetailsResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "title": "Uuid",
            "description": "Proxy UUID"
          },
          "host": {
            "type": "string",
            "title": "Host",
            "description": "Proxy host"
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "Proxy port"
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Proxy username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Proxy password"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Country code"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "description": "Availability status"
          },
          "last_checked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checked At",
            "description": "Last check timestamp"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Proxy note"
          },
          "endpoint": {
            "type": "string",
            "title": "Endpoint",
            "description": "Proxy endpoint (host:port)"
          },
          "full_url": {
            "type": "string",
            "title": "Full Url",
            "description": "Full proxy URL with authentication"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "host",
          "port",
          "username",
          "password",
          "is_available",
          "created_at",
          "updated_at",
          "endpoint",
          "full_url"
        ],
        "title": "GetProxyDetailsResponse",
        "description": "Get proxy details response"
      },
      "GetWorkerDetailsResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "title": "Uuid",
            "description": "Worker UUID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Worker name"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkerType"
              }
            ],
            "description": "Worker type"
          },
          "registered_at": {
            "type": "string",
            "format": "date-time",
            "title": "Registered At",
            "description": "Registration timestamp"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Worker note"
          },
          "online_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnlineStatus"
              }
            ],
            "description": "Worker online status"
          },
          "last_heartbeat": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Heartbeat",
            "description": "Last heartbeat timestamp"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds",
            "description": "TTL in seconds"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "name",
          "type",
          "registered_at",
          "online_status"
        ],
        "title": "GetWorkerDetailsResponse",
        "description": "Get worker details response"
      },
      "GetWorkerHeartbeatResponse": {
        "properties": {
          "worker_uuid": {
            "type": "string",
            "title": "Worker Uuid",
            "description": "Worker UUID"
          },
          "online_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnlineStatus"
              }
            ],
            "description": "Worker online status"
          },
          "last_update": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Update",
            "description": "Last update timestamp"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds",
            "description": "TTL in seconds"
          }
        },
        "type": "object",
        "required": [
          "worker_uuid",
          "online_status"
        ],
        "title": "GetWorkerHeartbeatResponse",
        "description": "Get worker heartbeat response"
      },
      "GetWorkerStatusReportResponse": {
        "properties": {
          "worker_uuid": {
            "type": "string",
            "title": "Worker Uuid",
            "description": "Worker UUID"
          },
          "report_availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportAvailability"
              }
            ],
            "description": "Status report availability"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp",
            "description": "Report timestamp"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Worker metadata"
          },
          "runtime": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Runtime",
            "description": "Runtime information"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "worker_uuid",
          "report_availability"
        ],
        "title": "GetWorkerStatusReportResponse",
        "description": "Get worker detailed status report response"
      },
      "GetWorkersResponse": {
        "properties": {
          "workers": {
            "items": {
              "$ref": "#/components/schemas/WorkerInfo"
            },
            "type": "array",
            "title": "Workers",
            "description": "List of workers"
          },
          "pagination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "Pagination information"
          }
        },
        "type": "object",
        "required": [
          "workers",
          "pagination"
        ],
        "title": "GetWorkersResponse",
        "description": "Get workers list response"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "OnlineStatus": {
        "type": "string",
        "enum": [
          "online",
          "offline",
          "unknown"
        ],
        "title": "OnlineStatus",
        "description": "Worker online status enumeration based on heartbeat"
      },
      "PaginationInfo": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Items per page"
          },
          "offset": {
            "type": "integer",
            "title": "Offset",
            "description": "Number of items skipped"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more items"
          }
        },
        "type": "object",
        "required": [
          "total",
          "limit",
          "offset",
          "has_more"
        ],
        "title": "PaginationInfo",
        "description": "Pagination metadata"
      },
      "ProxyForwarderInfo": {
        "properties": {
          "pid": {
            "type": "integer",
            "title": "Pid"
          },
          "local_port": {
            "type": "integer",
            "title": "Local Port"
          },
          "remote_host": {
            "type": "string",
            "title": "Remote Host"
          },
          "remote_port": {
            "type": "integer",
            "title": "Remote Port"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "is_alive": {
            "type": "boolean",
            "title": "Is Alive"
          }
        },
        "type": "object",
        "required": [
          "pid",
          "local_port",
          "remote_host",
          "remote_port",
          "username",
          "is_alive"
        ],
        "title": "ProxyForwarderInfo",
        "description": "Proxy forwarder instance runtime information"
      },
      "ProxyInfo": {
        "properties": {
          "uuid": {
            "type": "string",
            "title": "Uuid",
            "description": "Proxy UUID"
          },
          "host": {
            "type": "string",
            "title": "Host",
            "description": "Proxy host"
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "Proxy port"
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Proxy username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Proxy password"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Country code"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "description": "Availability status"
          },
          "last_checked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checked At",
            "description": "Last check timestamp"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Proxy note"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "host",
          "port",
          "username",
          "password",
          "is_available",
          "created_at",
          "updated_at"
        ],
        "title": "ProxyInfo",
        "description": "Proxy information"
      },
      "RegisterWorkerRequest": {
        "properties": {
          "worker_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worker Uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "worker_type": {
            "$ref": "#/components/schemas/WorkerType"
          },
          "is_reconnection": {
            "type": "boolean",
            "title": "Is Reconnection",
            "description": "Whether this is a reconnection",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "worker_type"
        ],
        "title": "RegisterWorkerRequest",
        "description": "Worker registration request"
      },
      "RegisterWorkerResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Registration status message"
          },
          "worker_uuid": {
            "type": "string",
            "title": "Worker Uuid",
            "description": "Worker UUID"
          },
          "registered_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registered At",
            "description": "Registration timestamp"
          },
          "reconnection": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reconnection",
            "description": "Whether this was a reconnection"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Additional notes"
          }
        },
        "type": "object",
        "required": [
          "message",
          "worker_uuid"
        ],
        "title": "RegisterWorkerResponse",
        "description": "Worker registration response"
      },
      "RemoveWorkerResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Removal status message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "RemoveWorkerResponse",
        "description": "Remove worker response"
      },
      "ReportAvailability": {
        "type": "string",
        "enum": [
          "available",
          "no_report"
        ],
        "title": "ReportAvailability",
        "description": "Worker detailed status report availability enumeration"
      },
      "ResourceStatusResponse": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiStatus"
              }
            ],
            "description": "Query status"
          },
          "resource_uuid": {
            "type": "string",
            "title": "Resource Uuid",
            "description": "Resource UUID"
          },
          "resource_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Data",
            "description": "Resource data"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "resource_uuid"
        ],
        "title": "ResourceStatusResponse",
        "description": "Response model for resource status query"
      },
      "SendHeartbeatRequest": {
        "properties": {
          "heartbeat_interval": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300.0,
                "minimum": 10.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Heartbeat Interval",
            "description": "Heartbeat interval in seconds",
            "default": 60
          }
        },
        "type": "object",
        "title": "SendHeartbeatRequest",
        "description": "Worker heartbeat request"
      },
      "SendHeartbeatResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Heartbeat status message"
          },
          "worker_uuid": {
            "type": "string",
            "title": "Worker Uuid",
            "description": "Worker UUID"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Update timestamp"
          },
          "ttl_seconds": {
            "type": "integer",
            "title": "Ttl Seconds",
            "description": "TTL in seconds"
          }
        },
        "type": "object",
        "required": [
          "message",
          "worker_uuid",
          "timestamp",
          "ttl_seconds"
        ],
        "title": "SendHeartbeatResponse",
        "description": "Worker heartbeat response"
      },
      "SendStatusReportRequest": {
        "properties": {
          "worker_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Worker Uuid"
          },
          "worker_type": {
            "type": "string",
            "title": "Worker Type"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "metadata": {
            "$ref": "#/components/schemas/WorkerMetadata"
          },
          "runtime": {
            "$ref": "#/components/schemas/WorkerRuntime"
          }
        },
        "type": "object",
        "required": [
          "worker_uuid",
          "worker_type",
          "timestamp",
          "metadata",
          "runtime"
        ],
        "title": "SendStatusReportRequest",
        "description": "Worker status report request"
      },
      "SendStatusReportResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Status update message"
          },
          "worker_uuid": {
            "type": "string",
            "title": "Worker Uuid",
            "description": "Worker UUID"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Report timestamp"
          },
          "metadata_updated": {
            "type": "boolean",
            "title": "Metadata Updated",
            "description": "Whether metadata was updated"
          },
          "runtime_updated": {
            "type": "boolean",
            "title": "Runtime Updated",
            "description": "Whether runtime info was updated"
          },
          "tasks": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tasks",
            "description": "Tasks"
          }
        },
        "type": "object",
        "required": [
          "message",
          "worker_uuid",
          "timestamp",
          "metadata_updated",
          "runtime_updated"
        ],
        "title": "SendStatusReportResponse",
        "description": "Worker status report response"
      },
      "StartBrowserRequest": {
        "properties": {
          "country_code": {
            "type": "string",
            "title": "Country Code",
            "description": "ISO country code (e.g., 'US', 'CN', 'JP')"
          },
          "parameters": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "Additional parameters for the browser"
          }
        },
        "type": "object",
        "required": [
          "country_code"
        ],
        "title": "StartBrowserRequest",
        "description": "Request model for starting browsers"
      },
      "StartBrowserResponse": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiStatus"
              }
            ],
            "description": "Command status"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code",
            "description": "Country code from request"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error details if failed"
          },
          "resource_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Uuid",
            "description": "Resource UUID"
          },
          "connection_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Ip",
            "description": "Connection IP"
          },
          "connection_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Port",
            "description": "Connection port"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "Password"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "country_code"
        ],
        "title": "StartBrowserResponse",
        "description": "Response model for start browser command"
      },
      "SubmitTaskRequest": {
        "properties": {
          "worker_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Worker Uuid",
            "description": "Submit to worker UUID"
          },
          "task": {
            "type": "string",
            "title": "Task",
            "description": "Task to submit"
          }
        },
        "type": "object",
        "required": [
          "worker_uuid",
          "task"
        ],
        "title": "SubmitTaskRequest",
        "description": "Request model for submitting tasks"
      },
      "SubmitTaskResponse": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiStatus"
              }
            ],
            "description": "Command status"
          },
          "worker_uuid": {
            "type": "string",
            "title": "Worker Uuid",
            "description": "Target worker UUID"
          },
          "task_id": {
            "type": "string",
            "title": "Task Id",
            "description": "Task ID"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name",
            "description": "Task name"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "worker_uuid",
          "task_id",
          "task_name"
        ],
        "title": "SubmitTaskResponse",
        "description": "Response model for submit task command"
      },
      "TerminateBrowserRequest": {
        "properties": {
          "resource_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Uuid",
            "description": "Resource UUID"
          }
        },
        "type": "object",
        "required": [
          "resource_uuid"
        ],
        "title": "TerminateBrowserRequest",
        "description": "Request model for terminating browsers"
      },
      "TerminateBrowserResponse": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiStatus"
              }
            ],
            "description": "Command status"
          },
          "resource_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Uuid",
            "description": "Resource UUID"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "resource_uuid"
        ],
        "title": "TerminateBrowserResponse",
        "description": "Response model for terminate browser command"
      },
      "UpdateProxyRequest": {
        "properties": {
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Proxy note"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Country code"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone"
          }
        },
        "type": "object",
        "title": "UpdateProxyRequest",
        "description": "Update proxy request - can update any combination of fields"
      },
      "UpdateProxyResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Update status message"
          },
          "proxy_uuid": {
            "type": "string",
            "title": "Proxy Uuid",
            "description": "Proxy UUID"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Updated note"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Updated country code"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Updated timezone"
          }
        },
        "type": "object",
        "required": [
          "message",
          "proxy_uuid"
        ],
        "title": "UpdateProxyResponse",
        "description": "Update proxy response"
      },
      "UpdateWorkerNoteRequest": {
        "properties": {
          "note": {
            "type": "string",
            "title": "Note",
            "description": "New note for the worker"
          }
        },
        "type": "object",
        "required": [
          "note"
        ],
        "title": "UpdateWorkerNoteRequest",
        "description": "Update worker note request"
      },
      "UpdateWorkerNoteResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Update status message"
          },
          "worker_uuid": {
            "type": "string",
            "title": "Worker Uuid",
            "description": "Worker UUID"
          },
          "note": {
            "type": "string",
            "title": "Note",
            "description": "Updated note"
          }
        },
        "type": "object",
        "required": [
          "message",
          "worker_uuid",
          "note"
        ],
        "title": "UpdateWorkerNoteResponse",
        "description": "Update worker note response"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WorkerInfo": {
        "properties": {
          "uuid": {
            "type": "string",
            "title": "Uuid",
            "description": "Worker UUID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Worker name"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkerType"
              }
            ],
            "description": "Worker type"
          },
          "registered_at": {
            "type": "string",
            "format": "date-time",
            "title": "Registered At",
            "description": "Registration timestamp"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note",
            "description": "Worker note"
          },
          "online_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnlineStatus"
              }
            ],
            "description": "Worker online status"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "name",
          "type",
          "registered_at",
          "online_status"
        ],
        "title": "WorkerInfo",
        "description": "Worker information with online status"
      },
      "WorkerMetadata": {
        "properties": {
          "client_ip": {
            "type": "string",
            "title": "Client Ip"
          },
          "mac_address": {
            "type": "string",
            "title": "Mac Address"
          },
          "config": {
            "type": "object",
            "title": "Config",
            "description": "Startup configuration"
          },
          "system_info": {
            "type": "object",
            "title": "System Info",
            "description": "Basic system information"
          },
          "worker_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worker Version"
          },
          "startup_time": {
            "type": "string",
            "format": "date-time",
            "title": "Startup Time"
          }
        },
        "type": "object",
        "required": [
          "client_ip",
          "mac_address",
          "config",
          "system_info",
          "startup_time"
        ],
        "title": "WorkerMetadata",
        "description": "Worker metadata - Static information"
      },
      "WorkerRuntime": {
        "properties": {
          "cpu_percent": {
            "type": "number",
            "title": "Cpu Percent"
          },
          "memory_usage": {
            "type": "object",
            "title": "Memory Usage"
          },
          "browser_instances": {
            "items": {
              "$ref": "#/components/schemas/BrowserInstanceInfo"
            },
            "type": "array",
            "title": "Browser Instances"
          },
          "total_browsers": {
            "type": "integer",
            "title": "Total Browsers"
          },
          "active_browsers": {
            "type": "integer",
            "title": "Active Browsers"
          },
          "proxy_forwarders": {
            "items": {
              "$ref": "#/components/schemas/ProxyForwarderInfo"
            },
            "type": "array",
            "title": "Proxy Forwarders"
          },
          "total_proxy_forwarders": {
            "type": "integer",
            "title": "Total Proxy Forwarders",
            "default": 0
          },
          "active_proxy_forwarders": {
            "type": "integer",
            "title": "Active Proxy Forwarders",
            "default": 0
          },
          "load_average": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Load Average"
          },
          "uptime_seconds": {
            "type": "integer",
            "title": "Uptime Seconds"
          }
        },
        "type": "object",
        "required": [
          "cpu_percent",
          "memory_usage",
          "browser_instances",
          "total_browsers",
          "active_browsers",
          "uptime_seconds"
        ],
        "title": "WorkerRuntime",
        "description": "Worker runtime information - Dynamic information"
      },
      "WorkerType": {
        "type": "string",
        "enum": [
          "fpb_desktop",
          "notification_mobile"
        ],
        "title": "WorkerType",
        "description": "Worker type enumeration"
      }
    }
  }
}